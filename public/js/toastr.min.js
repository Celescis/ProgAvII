
(function(factory) {
    if (typeof define === 'function' && define.amd) {
      define(['jquery'], factory);
    } else if (typeof module === 'object' && module.exports) {
      module.exports = factory(require('jquery'));
    } else {
      factory(jQuery);
    }
}(function($) {
    var toastr = {
      success: function(message, title, optionsOverride) {
        return notify({
          type: 'success',
          iconClass: 'toast-success',
          message: message,
          optionsOverride: optionsOverride,
          title: title
        });
      },
      error: function(message, title, optionsOverride) {
        return notify({
          type: 'error',
          iconClass: 'toast-error',
          message: message,
          optionsOverride: optionsOverride,
          title: title
        });
      },
    };

    return toastr;

    function notify(map) {
      var options = getOptions();
      var iconClass = map.iconClass || options.iconClass;

      if (typeof(map.optionsOverride) !== 'undefined') {
        options = $.extend(options, map.optionsOverride);
        iconClass = map.optionsOverride.iconClass || iconClass;
      }

      var $toastElement = $('<div/>');
      var $titleElement = $('<div/>');
      var $messageElement = $('<div/>');

      if (map.title) {
        $titleElement.append(map.title).addClass(options.titleClass);
        $toastElement.append($titleElement);
      }

      if (map.message) {
        $messageElement.append(map.message).addClass(options.messageClass);
        $toastElement.append($messageElement);
      }

      $toastElement.addClass(options.toastClass).addClass(iconClass);
      $('body').append($toastElement);

      $toastElement.hide().fadeIn(options.showDuration);
    }

    function getOptions() {
      return {
        toastClass: 'toast',
        titleClass: 'toast-title',
        messageClass: 'toast-message',
        showDuration: 300
      };
    }
}));
